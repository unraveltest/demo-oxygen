<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd" >
<task xml:lang="en-us" id="FAGHCHDG">
   <title>Part 1: Install Unravel Server on HDP </title>
   <taskbody>
      <context>
         <p>Introduction</p>
         <p>This topic explains how to <ph>deploy Unravel Server 4.0-4.1 on HDP 2.2.x-2.5.x clusters using Ambari Web UI
               (AWU). Unravel Hive Hook is used to collect information about Hive queries in Hadoop. The information
               here applies to Hive versions 0.10.0 through 2.1.x and Unravel 4.0-4.1</ph>. For older versions of
            Unravel Server, contact Unravel Support.</p>
         <b>Workflow Summary</b>
         <ol>
            <li>Pre-installation check</li>
            <li>Configure the host machine.</li>
            <li>Install the Unravel Server RPM on the host machine.</li>
            <li>
               <p>Configure Unravel Server (basic/core options).</p>
            </li>
            <li>Log into Unravel Web UI.</li>
            <li>(Optional) Configure Unravel Server (advanced options).</li>
         </ol>
         <b>Table of Contents</b>
         <ul outputclass="toc-indentation">
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Introduction">Introduction</xref>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Pre-InstallationCheck">Pre-Installation
                  Check</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-PlatformCompatibility">Platform
                        Compatibility</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Hardware">Hardware</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Software">Software</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-AccessPermissions">Access Permissions</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Network">Network</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-1.ConfiguretheHostMachine">1. Configure the Host
                  Machine</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref
                        href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-AllocateaClusterGateway/Edge/ClientHostwithHDFSAccess"
                        >Allocate a Cluster Gateway/Edge/Client Host with HDFS Access</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-2.InstalltheUnravelServerRPMontheHostMachine">2.
                  Install the Unravel Server RPM on the Host Machine</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-GettheUnravelServerRPM">Get the Unravel
                        Server RPM</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-InstalltheUnravelServerRPM">Install the
                        Unravel Server RPM</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-DoHost-SpecificPost-InstallationActions">Do
                        Host-Specific Post-Installation Actions</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-3.ConfigureUnravelServer(Basic/CoreOptions)">3.
                  Configure Unravel Server (Basic/Core Options)</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Modifyunravel.properties">Modify
                        unravel.properties</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-IfKerberosisEnabled:">If Kerberos is
                        Enabled:</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-IfRangerisEnabled:">If Ranger is
                        Enabled:</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-4.ConvertYourUnravelInstallationtoHDP">4. Convert
                  Your Unravel Installation to HDP</xref>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-5.UpdateSite-SpecificHDPProperties">5. Update
                  Site-Specific HDP Properties</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-RestartUnravelServer">Restart Unravel
                        Server</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-4.LogintoUnravelWebUI">4. Log into Unravel Web
                  UI</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-Congratulations!">Congratulations!</xref>
                  </li>
               </ul>
            </li>
            <li>
               <xref
                  href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-5.(Optional)ConfigureUnravelServer(AdvancedOptions)"
                  >5. (Optional) Configure Unravel Server (Advanced Options)</xref>
               <ul outputclass="toc-indentation">
                  <li>
                     <xref
                        href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-EnableAdditionalDataCollection/Instrumentation"
                        >Enable Additional Data Collection/Instrumentation</xref>
                  </li>
                  <li>
                     <xref href="#FAGHCHDG/Part1:InstallUnravelServeronHDP-RuntheUnravelWebUIConfigurationWizard">Run
                        the Unravel Web UI Configuration Wizard</xref>
                  </li>
               </ul>
            </li>
         </ul>
         <p>Pre-Installation Check</p>
         <p>The following installation requirements must be met for successful installation of Unravel.</p>
         <p>Platform Compatibility</p>
         <ul>
            <li>HDP 2.2-2.6</li>
            <li>Hadoop 1.x - 2.x</li>
            <li>Hive 0.9.x - 1.2.x</li>
            <li>Spark 1.3.x - 2.0.x</li>
         </ul>
         <p>Hardware</p>
         <ul>
            <li>Architecture: x86_64</li>
            <li>Cores: 8</li>
            <li>RAM: 64GB minimum</li>
            <li>Disk: <codeph>/usr/local/unravel</codeph> with 2.5GB free minimum</li>
            <li>Disk: <codeph>/srv/unravel</codeph> with 500GB free minimum</li>
            <li>For 10,000+ MR jobs per day, two or more gateway/edge nodes are recommended</li>
         </ul>
         <p>Software</p>
         <ul>
            <li>Operating System: RedHat/Centos 6.4 - 7.3</li>
            <li>
               <codeph>libaio.x86_64</codeph> installed</li>
            <li>
               <codeph>SELINUX=permissive</codeph> (or disabled) should be set in <codeph>/etc/selinux/config</codeph>
            </li>
            <li>HDFS+Hive+YARN client/gateway, Hadoop and Hive commands in <codeph>PATH</codeph>
            </li>
            <li>If Spark is in use, Spark client gateway</li>
            <li>LDAP (AD or Open LDAP) compatible for Unravel Web UI user authentication (Open signup by default)</li>
            <li>On Unravel Edge-node server, please <b>
                  <u>do not</u>
               </b> have zookeeper installed in same server</li>
         </ul>
         <p>Access Permissions</p>
         <ul>
            <li>If Kerberos is in use, a keytab for principal hdfs (or read-only equivalent) is required for access to:<ul>
                  <li>Access to YARN’s “done dir” in HDFS</li>
                  <li>Access to YARN’s log aggregation directory in HDFS</li>
                  <li>Access to Spark event log directory in HDFS</li>
                  <li>Access to file sizes under HIve warehouse directory</li>
               </ul>
            </li>
            <li>Access to YARN Resource Manager REST API<!--A BR tag was used here in the original source.-->
               <ul>
                  <li>principal needs right to find out which RM is active</li>
               </ul>
            </li>
            <li>JDBC access to the Hive Metastore (read-only user is sufficient)</li>
         </ul>
         <p>Network</p>
         <ul>
            <li>Port 3000 (or 4020) from users and entire cluster to Unravel Web UI</li>
            <li>HDFS ports open from Hadoop cluster to Unravel Server(s)</li>
            <li>For MR1, TaskTracker port open from Hadoop cluster to Unravel Server(s)</li>
            <li>For MR1/YARN, Hive Metadata DB port open to Unravel Server(s) for partition reporting</li>
            <li>UDP and TCP port 4043 open from entire cluster to Unravel Server(s)</li>
            <li>For Oozie, port 11000 open from Unravel Server(s) to the Oozie server</li>
            <li>Resource Manager (RM) port 8032 from Unravel Server(s) to the RM server(s)</li>
            <li>
               <ph>Port 4176, 4181 through 4189, 3316, 4091 must be available for localhost communication between
                  Unravel daemons or services</ph>
            </li>
         </ul>
         <p>1. Configure the Host Machine</p>
         <p>Allocate a Cluster Gateway/Edge/Client Host with HDFS Access</p>
         <p>For HDP, use Ambari Web UI to create a Gateway node configuration. The hadoop command must be present on the
            Unravel target server.</p>
         <p>2. Install the Unravel Server RPM on the Host Machine</p>
         <p>Get the Unravel Server RPM</p>
         <p>Copy the RPM from the Unravel distribution server to the host machine using the username and password given
            to you by Unravel Support:</p>
         <ul>
            <li>
               <p outputclass="auto-cursor-target">For the free trial version:</p>
               <codeblock outputclass="syntaxhighlighter-pre">scp "unraveltrial@trial.unraveldata.com:unravel-4.*.x86_64.rpm" .</codeblock>
            </li>
            <li>For the enterprise version:
               <codeblock outputclass="syntaxhighlighter-pre">scp $USER@dist.unraveldata.com:unravel-4.*.x86_64.rpm.$timestamp .</codeblock>
            </li>
         </ul>
         <p>The precise RPM filename will vary. The version has the structure <i>
               <codeph>x.y.b</codeph>
            </i> where <i>
               <codeph>b</codeph>
            </i> is a build number that is imposed as an RPM epoch which means it takes precedence over version numbers
            for determining what is more up-to-date. The Unravel build numbers always increase and are allocated so that
            they respect the ordering of <i>
               <codeph>x.y</codeph>
            </i> versioning.</p>
         <p/>
         <p>Install the Unravel Server RPM</p>
         <p>Replace the asterisks as needed to be more selective.</p>
         <codeblock outputclass="syntaxhighlighter-pre">sudo rpm -U unravel-4.*.x86_64.rpm*</codeblock>
         <ph outputclass="aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon"/>
         <p>The installation creates <codeph>/usr/local/unravel/</codeph> which contains the executables, scripts, and
            settings. User <codeph>unravel</codeph> is created. The initial internal database and other durable state
            are put in <codeph>/srv/unravel/</codeph> for larger storage. By default, the installation supports YARN.
            The master configuration file is in <codeph>/usr/local/unravel/etc/unravel.properties</codeph> and the logs
            are in <codeph>/usr/local/unravel/logs/</codeph>. The RPM installation creates user <codeph>unravel</codeph>
            if it does not already exist; <codeph>/etc/init.d/unravel_*</codeph> scripts for controlling its services as
            well as <codeph>/etc/init.d/unravel_all.sh</codeph> which can be used to manually stop, start, and get
            status of all daemons in proper order.  The RPM installation also creates an HDFS directory for Hive Hook
            information collection.  During initial install, a bundled database is used. This can be switched to use an
            externally managed MySQL for production. (The bundled database root mysql password will be stored
               in <codeph>/root/unravel.install.include</codeph> during installation.)</p>
         <p>
            <ph>Do Host-Specific Post-Installation Actions</ph>
         </p>
         <p>
            <ph>For HDP, there are no host-specific post-installation actions.</ph>
         </p>
         <p>3. Configure Unravel Server (Basic/Core Options)</p>
         <p>Modify <codeph>unravel.properties</codeph>
         </p>
         <ul>
            <li>
               <p>Open <ph>
                     <codeph>/usr/local/unravel/etc/unravel.properties</codeph>
                  </ph> with <codeph>vi</codeph>.</p>
               <codeblock outputclass="syntaxhighlighter-pre">sudo vi /usr/local/unravel/etc/unravel.properties</codeblock>
            </li>
            <li>Edit the values in <ph>
                  <codeph>unravel.properties</codeph>
               </ph> using the guidelines and descriptions in the table below.</li>
         </ul>
         <table outputclass="wrapped confluenceTable">
            <tgroup cols="3">
               <colspec colname="col1"/>
               <colspec colname="col2"/>
               <colspec colname="col3"/>
               <tbody>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.advertised.url</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Defines the Unravel Server URL for
                        HTTP traffic.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.advertised.url=<ph outputclass="nolink">
                              <ph outputclass="nolink">http://<ph>LAN_DNS</ph>:3000</ph>
                           </ph>
                        </codeph>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.customer.organization</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Identifies your installation for
                        reporting purposes.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.customer.organization=<ph>Company_and_org</ph>
                        </codeph>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeblock>com.unraveldata.tmpdir</codeblock>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Location where Unravel's temp file
                        will reside</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeblock>com.unraveldata.tmpdir=/srv/unravel/tmp</codeblock>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.history.maxSize.weeks</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Sets retention for search
                        data.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.history.maxSize.weeks=26</codeph>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.hive.hook.topic.num.threads</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <b>Optional</b>. Defines the number of threads. Default is 1. Depending on job volume, increase
                        this property to <i>N</i> where <i>N</i> is between 1 and 4, or roughly
                           <i>ThousandJobsPerDay</i>/10.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.hive.hook.topic.num.threads=1</codeph>
                     </entry>
                  </row>
                  <row>
                     <entry outputclass="confluenceTd">
                        <codeph>
                           <ph>com.unraveldata.job.collector.done.log.base</ph>
                        </codeph>
                     </entry>
                     <entry outputclass="confluenceTd">Only modifiable through Unravel Web UI's configuration
                        wizard.</entry>
                     <entry outputclass="confluenceTd">
                        <codeblock>com.unraveldata.job.collector.done.log.base=/mr-history/done</codeblock>
                     </entry>
                  </row>
                  <row>
                     <entry outputclass="confluenceTd">
                        <codeph>
                           <ph>
                              <ph>
                                 <codeph>com.unraveldata.job.collector.log.aggregation.base</codeph>
                              </ph>
                           </ph>
                        </codeph>
                     </entry>
                     <entry outputclass="confluenceTd">Only modifiable through Unravel Web UI's configuration
                        wizard.</entry>
                     <entry outputclass="confluenceTd">
                        <codeblock>com.unraveldata.job.collector.log.aggregation.base=/app-logs/*/logs/</codeblock>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.login.admins</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Defines the usernames that can
                        access Unravel Web UI's admin pages. Default is <codeph>admin</codeph>.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.login.admins=admin</codeph>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>com.unraveldata.s3.batch.monitoring.interval.sec</codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <b>Optional</b>. Defines the monitoring frequency. Default is 300 seconds (5 minutes). Set this
                        property to 60 for lower latency.</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeph>com.unraveldata.s3.batch.monitoring.interval.sec=120</codeph>
                     </entry>
                  </row>
                  <row>
                     <entry outputclass="confluenceTd">
                        <codeph>
                           <ph>com.unraveldata.spark.eventlog.location</ph>
                        </codeph>
                        <ph/>
                     </entry>
                     <entry outputclass="confluenceTd">
                        <ph>Where to find Spark event logs</ph>
                     </entry>
                     <entry outputclass="confluenceTd">
                        <codeblock>com.unraveldata.spark.eventlog.location=hdfs://example.localdomain:8020/spark-history/</codeblock>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>
                              <ph>yarn.resourcemanager.webapp.address</ph>
                           </ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <ph>YARN resource manager web address URL </ph>
                     </entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeblock>yarn.resourcemanager.webapp.address=http://example.localdomain<xref href="http://ip-10-0-0-90.ec2.internal:8088" scope="external" format="html" outputclass="external-link">:8088</xref>
                        </codeblock>
                     </entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>oozie.server.url</ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">Oozie URL</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <codeblock>oozie.server.url=http://example.localdomain<xref href="http://ip-10-0-0-90.ec2.internal:11000/oozie" scope="external" format="html" outputclass="external-link">:11000/oozie</xref>
                        </codeblock>
                     </entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
         <p>If Kerberos is Enabled:</p>
         <ph outputclass="expand-control-icon">
            <image href="images/icons/grey_arrow_down.png" outputclass="expand-control-image"/>
         </ph>
         <ph outputclass="expand-control-text">Add authentication for HDFS...</ph>
         <p>(a) Create a keytab for unravel for daemons that run as <codeph>unravel</codeph> and put the file in
               <codeph>/etc/keytabs/unravel.keytab</codeph> (for example).</p>
         <p>(b) Create a keytab for hdfs for the Unravel daemons that run as user <codeph>hdfs</codeph> and put the file
            in <codeph>/etc/keytabs/hdfs.keytab</codeph> (for example).</p>
         <p>(c) Tell Unravel Server about it (env var for hdfs keytab location; substitute correct realm and /hostname,
            if applicable):</p>
         <codeblock outputclass="syntaxhighlighter-pre">echo "export HDFS_KEYTAB_PATH=/etc/keytabs/hdfs.keytab 
export HDFS_KERBEROS_PRINCIPAL=hdfs/myhost.mydomain@MYREALM 
" | sudo tee -a /usr/local/unravel/etc/unravel.ext.sh </codeblock>
         <p>(d) Add properties for Kerberos:</p>
         <codeblock outputclass="syntaxhighlighter-pre">echo "
com.unraveldata.kerberos.principal=unravel/myhost.mydomain@MYREALM
com.unraveldata.kerberos.keytab.path=/etc/keytabs/unravel.keytab
" | sudo tee -a /usr/local/unravel/unravel.properties

</codeblock>
         <p outputclass="auto-cursor-target">
            <i>You can find the principal by using 'klist -kt KEYTAB_FILE'</i>
         </p>
         <p>If Ranger is Enabled:</p>
         <ph outputclass="expand-control-icon">
            <image href="images/icons/grey_arrow_down.png" outputclass="expand-control-image"/>
         </ph>
         <ph outputclass="expand-control-text">Add these permissions...</ph>
         <table outputclass="wrapped confluenceTable">
            <tgroup cols="4">
               <colspec colname="col1"/>
               <colspec colname="col2"/>
               <colspec colname="col3"/>
               <colspec colname="col4"/>
               <tbody>
                  <row>
                     <entry outputclass="confluenceTd">
                        <codeph>hdfs://user/unravel/HOOK_RESULT_DIR</codeph>
                     </entry>
                     <entry outputclass="confluenceTd">*</entry>
                     <entry outputclass="confluenceTd">read+write</entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">data transfer from Hive jobs when
                        Unravel is not up</entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>hdfs://user/spark/applicationHistory</ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">hdfs</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <ph>read</ph>
                     </entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">Spark event log</entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>hdfs://usr/history/done</ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <ph>hdfs</ph>
                     </entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <ph>read</ph>
                     </entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">MapReduce logs</entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>hdfs://tmp/logs</ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <ph>hdfs</ph>
                     </entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <ph>read</ph>
                     </entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">YARN aggregation folder</entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">
                        <codeph>
                           <ph>hdfs://user/hive/warehouse</ph>
                        </codeph>
                     </entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">
                        <ph>hdfs</ph>
                     </entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <ph>read</ph>
                     </entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">Obtain table partition sizes</entry>
                  </row>
                  <row>
                     <entry namest="col1" nameend="col1" outputclass="confluenceTd">Hive Metastore GRANT</entry>
                     <entry namest="col2" nameend="col2" outputclass="confluenceTd">hive</entry>
                     <entry namest="col3" nameend="col3" outputclass="confluenceTd">
                        <ph>read</ph>
                     </entry>
                     <entry namest="col4" nameend="col4" outputclass="confluenceTd">Hive table information</entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
         <p/>
         <p/>
         <p>4. Convert Your Unravel Installation to HDP</p>
         <p>Run the following commands on Unravel Server:</p>
         <codeblock outputclass="syntaxhighlighter-pre">sudo /etc/init.d/unravel_all.sh stop
sudo /usr/local/unravel/install_bin/switch_to_hdp.sh</codeblock>
         <p/>
         <ph outputclass="aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon"/>Note: This
         change will stick after RPM upgrades.<p>5. Update Site-Specific HDP Properties</p>
         <p>The following site-specific properties in <codeph>/usr/local/unravel/etc/unravel.properties</codeph> were
            added or modified by the script above (<codeph>switch_to_hdp.sh</codeph>). Check
               <codeph>/usr/local/unravel/etc/unravel.properties</codeph> to see if you need to modify any of these
            properties:</p>
         <codeblock outputclass="syntaxhighlighter-pre"># Repoint Unravel application logs directory
com.unraveldata.job.collector.done.log.base=/mr-history/done
com.unraveldata.job.collector.log.aggregation.base=/app-logs/*/logs/
com.unraveldata.spark.eventlog.location=hdfs:///user/spark/applicationHistory/
 
# Add Hive Metastore database information for Unravel Hive Config 
javax.jdo.option.ConnectionURL=jdbc:mysql://{hostname}:3306/{database_name} 
javax.jdo.option.ConnectionDriverName=com.mysql.jdbc.Driver
javax.jdo.option.ConnectionUserName={HiveMetastoreUserName} 
javax.jdo.option.ConnectionPassword={HiveMetastorePassword}</codeblock>
         <p/>
         <p>Verify above site-specific values using the Ambari Web UI (AWU):</p>
         <ul>
            <li>Verify <codeph>com.unraveldata.job.collector.done.log.base</codeph>
               <ul>
                  <li>
                     <ph>In AWU, on the left-hand side, click <b>MapReduce2</b> | <b>Configs</b>. Select the
                           <b>Advanced</b> tab, and then select </ph>
                     <b>Advanced mapred-site</b>.<ul>
                        <li>
                           <ph>Take note of the value of <codeph>mapreduce.jobhistory.done-dir</codeph> to enter into
                                 <codeph>unravel.properties</codeph> of
                                 "<codeph>com.unraveldata.job.collector.done.log.base=</codeph>"</ph>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li>Verify <codeph>com.unraveldata.job.collector.log.aggregation.base</codeph>
               <ul>
                  <li>
                     <ph>In AWU, on the left-hand side, click <b>YARN</b> | <b>Configs</b>. Select the <b>Advanced</b>
                        tab, and then select </ph>
                     <b>Node Manager</b>.<ul>
                        <li>
                           <ph>Take note of the value of <codeph>yarn.nodemanager.remote-app-log-dir</codeph> to enter
                              into <codeph>unravel.properties</codeph> of
                                 "<codeph>com.unraveldata.job.collector.log.aggregation.base=</codeph>"</ph>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li>Verify Hive Metastore <codeph>javax.jdo.option.Connection</codeph>
               <ul>
                  <li>
                     <ph>In AWU, on the left-hand side, click <b>Hive</b> | <ph>
                           <b>Configs</b>. Select the <b>Advanced</b> tab</ph>, and then select </ph>
                     <b>Hive Metastore</b>. <ul>
                        <li>
                           <ph>Take note of following properties and their values to be entered into
                                 <codeph>unravel.properties</codeph>:</ph>
                           <ul>
                              <li>
                                 <b>
                                    <ph>Database URL</ph>
                                 </b>
                              </li>
                              <li>
                                 <b>
                                    <ph>Database Host</ph>
                                 </b>
                              </li>
                              <li>
                                 <b>
                                    <ph>JDBC Driver Class</ph>
                                 </b>
                              </li>
                              <li>
                                 <b>
                                    <ph>Database Name</ph>
                                 </b>
                              </li>
                              <li>
                                 <b>
                                    <ph>Database Username</ph>
                                 </b>
                              </li>
                              <li>
                                 <ph>
                                    <b>Database Password</b> (if visible)</ph>
                              </li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
         <p/>
         <p>Restart Unravel Server</p>
         <p>After edits to <codeph>com.unraveldata.login.admins</codeph> in
               <codeph>/usr/local/unravel/etc/unravel.properties</codeph> it is necessary to run the following script in
            order to make changes take effect. The <codeph>echo</codeph> command shows the page to visit with your
            browser. If you are using an ssh tunnel or http proxy, you might need to make adjustments.</p>
         <codeblock outputclass="syntaxhighlighter-pre">sudo /etc/init.d/unravel_all.sh start
sleep 60
echo "http://$(hostname -f):3000/"</codeblock>
         <p>This completes the basic/core configuration.</p>
         <p>4. Log into Unravel Web UI</p>
         <p>Using a web browser, navigate to <codeph>
               <ph outputclass="nolink">http://($hostname</ph> -f):3000</codeph> and login as user
               "<codeph>admin"</codeph> with password <codeph>"unraveldata</codeph>".</p>
         <ph outputclass="aui-icon aui-icon-small aui-iconfont-warning confluence-information-macro-icon"/>
         <p>For the free trial version, use the Chrome web browser.</p>
         <p>
            <ph outputclass="confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size">
               <image href="media/51099949.png" outputclass="confluence-embedded-image image-center"/>
            </ph>
         </p>
         <p>
            <i>Unravel Web UI Login Screen</i>
         </p>
         <p>Congratulations!</p>
         <p>Unravel Server is up and running. Unravel Web UI displays collected data. For instructions on using Unravel
            Web UI, see the <xref href="User-Guide_50687944.dita">User Guide</xref>.</p>
         <p>5. (Optional) Configure Unravel Server (Advanced Options)</p>
         <p>Enable Additional Data Collection/Instrumentation</p>
         <p>Install the Unravel Sensor Parcel on gateway/edge/client nodes that are used to submit Hive queries to push
            additional information to Unravel Server. For details, see <xref href="50689477.dita">Part 2: Enable
               Additional Data Collection / Instrumentation for HDP</xref>.</p>
         <p>Run the Unravel Web UI Configuration Wizard</p>
         <p>Run the Unravel Web UI configuration wizard to choose additional configuration options. For instructions on
            configuring advanced options, see the <xref href="User-Guide_50687944.dita">User Guide</xref>.</p>
         <p/>
         <codeblock>

         </codeblock>
      </context>
   </taskbody>
</task>
